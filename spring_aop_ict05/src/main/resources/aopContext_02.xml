<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 위빙 : 핵심관심 메서드가 호출될 때, 횡단관심 메서드가 삽입되는 과정 -->
	<!-- 방법 2. annotation을 이용한 AOP 방법 -->
	<!-- 
		1. proxy로 자동으로 객체 생성
		2. @Aspect Annotation이 적용된 bean 객체를 Advice(횡단관심)으로 사용한다.
	 -->
	<bean id="log" class="com.spring.aop_ict05.annotation.LogAop"/>	<!-- 횡단관심(공통관심) 클래스를 빈으로 등록 -->
	<aop:aspectj-autoproxy />	<!-- proxy:대리 -> 자동으로 할당해서 실행해준다는 느낌  -->
	
<!-- 		<aop:config> aop 설정할게
			<aop:aspect id="logger" ref="log">	관점 설정
				<aop:pointcut id="allPointCut" expression="execution(* com.spring.aop_ict05.annotation.*.*(..))"/>		expression의 패키지 내에 있는 모든 클래스에 모든 PointCut을 적용
																											핵심관심임
					<aop:around method="loggerAop" pointcut-ref="allPointCut"/>		로그를 언제 찍을지(횡단관심의 타이밍 설정)
			</aop:aspect>
		</aop:config>
	 -->



	<bean id ="member" class="com.spring.aop_ict05.annotation.Member">
		<property name="id" value="hong   "></property>
		<property name="pwd" value="1234"></property>
		<property name="name" value="홍길동"></property>
		<property name="hobby" value="책 읽기"></property>
	</bean>
</beans>
